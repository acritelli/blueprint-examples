version: 2.1

orbs:
  node: cloudify/public-unittest-orb@1 #orb version
  wagonorb: cloudify/wagon-bulder-orb@1 #orb version
  releaseorb: cloudify/release-orb@1 #orb version
  managerorb: cloudify/manager-orb@1

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

executors:

  py36:
    docker:
      - image: circleci/python:3.6

  cloudify-machine-py3:
    machine:
      image: ubuntu-1604:201903-01

commands:

  validate_examples:
    steps:
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip --user
      - run: pytest -s .cicd/test_examples.py -k 'test_blueprint_validation or test_versions'

  validate_examples_nightlies:
    steps:
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip --user
      - run: pytest -s .cicd/test_examples.py -k 'test_blueprint_validation_nightlies or test_versions'

  test_openshift:
    steps:
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip
      - run: pytest -s .cicd/test_examples.py -k 'test_openshift'

  test_examples:
    steps:
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip
      - run: pytest -s .cicd/test_examples.py -k 'test_getting_started'

  release_examples:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init --recursive
      - attach_workspace:
          at: workspace
      - run:
          name: update pip
          command: pip install -U pip===20.3.3
      - run:
          name: install cloudify
          command: pip install -U cloudify==5.1 pytest==4.6.3
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip --user
      - run: python .cicd/package_examples.py

jobs:

  blueprints-validation:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - validate_examples

  blueprints-validation-nightlies:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - validate_examples_nightlies

  getting-started-aws:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: aws
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - test_examples

  getting-started-aws-terraform:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: aws
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - test_examples

  getting-started-aws-cloudformation:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: aws
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - test_examples

  getting-started-openstack:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: openstack
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - test_examples

  getting-started-azure:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: azure
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - test_examples

  getting-started-azure-arm:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: azure
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - test_examples

  getting-started-gcp:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: gcp
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - test_examples

  getting-started-ansible:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: ansible
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - test_examples

  openshift:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - test_openshift

  release:
    executor: py36
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - release_examples

workflows:
  version: 2
  tests:
    jobs:
      - blueprints-validation
      - getting-started-aws:
          requires:
            - blueprints-validation
          filters:
            branches:
              only: master
      - getting-started-aws-terraform:
          requires:
            - getting-started-aws
          filters:
            branches:
              only: master
      - getting-started-aws-cloudformation:
          requires:
            - getting-started-aws-terraform
          filters:
            branches:
              only: master
      - getting-started-azure:
          requires:
            - getting-started-gcp
            - blueprints-validation
          filters:
            branches:
              only: master
      - getting-started-azure-arm:
          requires:
            - getting-started-azure
            - blueprints-validation
          filters:
            branches:
              only: master
      - getting-started-gcp:
          requires:
            - blueprints-validation
          filters:
            branches:
              only: master
#      - getting-started-ansible:
#          requires:
#            - blueprints-validation
#            - getting-started-aws-cloudformation
#          filters:
#            branches:
#              only: master
      - release:
          requires:
            - blueprints-validation
            - getting-started-aws
            - getting-started-aws-cloudformation
            - getting-started-aws-terraform
            - getting-started-azure
            - getting-started-azure-arm
            - getting-started-gcp
            # - getting-started-ansible
          filters:
            branches:
              only: master
  nightly:
    triggers:
    - schedule:
        cron: "0 0 * * *"
        filters:
          branches:
            only:
              - master
    jobs:
      - blueprints-validation-nightlies
      - getting-started-aws:
          requires:
            - blueprints-validation-nightlies
          filters:
            branches:
              only: master
      - getting-started-aws-terraform:
          requires:
            - getting-started-aws
          filters:
            branches:
              only: master
      - getting-started-aws-cloudformation:
          requires:
            - getting-started-aws-terraform
          filters:
            branches:
              only: master
#      - getting-started-ansible:
#          requires:
#            - getting-started-aws-cloudformation
#          filters:
#            branches:
#              only: master
      - getting-started-azure:
          requires:
            - blueprints-validation-nightlies
          filters:
            branches:
              only: master
      - getting-started-azure-arm:
          requires:
            - getting-started-azure
          filters:
            branches:
              only: master
      - getting-started-gcp:
          requires:
            - blueprints-validation-nightlies
          filters:
            branches:
              only: master

